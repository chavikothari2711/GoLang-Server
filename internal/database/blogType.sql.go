// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: blogType.sql

package database

import (
	"context"
)

const createBlogVisibilityType = `-- name: CreateBlogVisibilityType :one
INSERT INTO blogType (visibilityType)
VALUES ($1)
RETURNING id, visibilitytype, created_at, updated_at
`

func (q *Queries) CreateBlogVisibilityType(ctx context.Context, visibilitytype string) (Blogtype, error) {
	row := q.db.QueryRowContext(ctx, createBlogVisibilityType, visibilitytype)
	var i Blogtype
	err := row.Scan(
		&i.ID,
		&i.Visibilitytype,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getAllVisibilityType = `-- name: GetAllVisibilityType :one
SELECT id, visibilitytype, created_at, updated_at FROM blogType
`

func (q *Queries) GetAllVisibilityType(ctx context.Context) (Blogtype, error) {
	row := q.db.QueryRowContext(ctx, getAllVisibilityType)
	var i Blogtype
	err := row.Scan(
		&i.ID,
		&i.Visibilitytype,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getVisibilityId = `-- name: GetVisibilityId :one
SELECT id, visibilitytype, created_at, updated_at FROM blogType WHERE visibilityType=$1
`

func (q *Queries) GetVisibilityId(ctx context.Context, visibilitytype string) (Blogtype, error) {
	row := q.db.QueryRowContext(ctx, getVisibilityId, visibilitytype)
	var i Blogtype
	err := row.Scan(
		&i.ID,
		&i.Visibilitytype,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
